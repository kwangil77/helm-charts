apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sourcegraph.fullname" . }}
  labels:
    {{- include "sourcegraph.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "sourcegraph.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sourcegraph.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sourcegraph.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.psql }}
            - name: PGHOST
              value: {{ .Values.psql.host | quote }}
            - name: PGPORT
              value: {{ .Values.psql.port | quote }}
            - name: PGUSER
              value: {{ .Values.psql.username | quote }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.psql.password.secret }}
                  key: {{ .Values.psql.password.key }}
            - name: PGDATABASE
              value: {{ .Values.psql.database }}
            - name: PGDATASOURCE
              value: postgres://$(PGUSER):$(PGPASSWORD)@$(PGHOST):$(PGPORT)/$(PGDATABASE)?statement_cache_mode=describe
            - name: CODEINTEL_PGHOST
              value: {{ .Values.psql.host | quote }}
            - name: CODEINTEL_PGPORT
              value: {{ .Values.psql.port | quote }}
            - name: CODEINTEL_PGUSER
              value: {{ .Values.psql.username | quote }}
            - name: CODEINTEL_PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.psql.password.secret }}
                  key: {{ .Values.psql.password.key }}
            - name: CODEINTEL_PGDATABASE
              value: {{ .Values.psql.database }}
            - name: CODEINTEL_PG_ALLOW_SINGLE_DB
              value: 'true'
            - name: CODEINTEL_PGDATASOURCE
              value: postgres://$(CODEINTEL_PGUSER):$(CODEINTEL_PGPASSWORD)@$(CODEINTEL_PGHOST):$(CODEINTEL_PGPORT)/$(CODEINTEL_PGDATABASE)?statement_cache_mode=describe
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 7080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /var/opt/sourcegraph
              name: {{ include "sourcegraph.pvcname" . }}
          {{- if .Values.extraVolumeMounts}}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- .Values.resources | toYaml | trim | nindent 12 }}
      volumes:
        - name: {{ include "sourcegraph.pvcname" . }}
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "sourcegraph.pvcname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}